# Generated by Django 4.2.1 on 2025-05-12 10:48

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='FileDataMetadata',
            fields=[
                ('metadata_id', models.AutoField(primary_key=True, serialize=False)),
                ('data_type', models.CharField(choices=[('sales', 'Sales Data'), ('inventory', 'Inventory Data'), ('customers', 'Customers Data'), ('other', 'Other Data')], max_length=50)),
                ('columns_info', models.JSONField(blank=True, null=True)),
                ('rows_count', models.IntegerField(blank=True, null=True)),
                ('date_range_start', models.DateField(blank=True, null=True)),
                ('date_range_end', models.DateField(blank=True, null=True)),
                ('additional_metadata', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'File Data Metadata',
                'verbose_name_plural': 'File Data Metadata',
                'db_table': 'file_data_metadata',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('position_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('level', models.IntegerField(default=1)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Position',
                'verbose_name_plural': 'Positions',
                'db_table': 'positions',
            },
        ),
        migrations.CreateModel(
            name='Visualization',
            fields=[
                ('visualization_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('visualization_type', models.CharField(choices=[('line_chart', 'Line Chart'), ('bar_chart', 'Bar Chart'), ('pie_chart', 'Pie Chart'), ('table', 'Table'), ('scatter_plot', 'Scatter Plot'), ('heatmap', 'Heatmap'), ('other', 'Other')], max_length=50)),
                ('config', models.JSONField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False)),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='www.filedatametadata')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Visualization',
                'verbose_name_plural': 'Visualizations',
                'db_table': 'visualizations',
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('original_filename', models.CharField(max_length=255)),
                ('stored_filename', models.CharField(max_length=255, unique=True)),
                ('file_type', models.CharField(choices=[('xml', 'XML'), ('xlsx', 'Excel'), ('csv', 'CSV'), ('json', 'JSON'), ('other', 'Other')], max_length=50)),
                ('file_size', models.BigIntegerField()),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Uploaded File',
                'verbose_name_plural': 'Uploaded Files',
                'db_table': 'uploaded_files',
            },
        ),
        migrations.CreateModel(
            name='QueryHistory',
            fields=[
                ('query_id', models.AutoField(primary_key=True, serialize=False)),
                ('query_text', models.TextField()),
                ('query_type', models.CharField(choices=[('upload', 'File Upload'), ('visualize', 'Create Visualization'), ('filter', 'Apply Filters'), ('export', 'Export Data'), ('other', 'Other')], max_length=50)),
                ('execution_time', models.DurationField(blank=True, null=True)),
                ('result_count', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='www.uploadedfile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('visualization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='www.visualization')),
            ],
            options={
                'verbose_name': 'Query History',
                'verbose_name_plural': 'Query History',
                'db_table': 'query_history',
            },
        ),
        migrations.AddField(
            model_name='filedatametadata',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='www.uploadedfile'),
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='www.department'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='www.position'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='VisualizationConfig',
            fields=[
                ('config_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('config_data', models.JSONField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_default', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Visualization Configuration',
                'verbose_name_plural': 'Visualization Configurations',
                'db_table': 'visualization_configs',
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('file_upload', 'File Upload'), ('visualization_create', 'Visualization Created'), ('visualization_edit', 'Visualization Edited'), ('visualization_delete', 'Visualization Deleted'), ('other', 'Other Action')], max_length=50)),
                ('action_details', models.TextField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity Log',
                'verbose_name_plural': 'User Activity Logs',
                'db_table': 'user_activity_logs',
                'indexes': [models.Index(fields=['user'], name='user_activi_user_id_6973f1_idx'), models.Index(fields=['timestamp'], name='user_activi_timesta_8378ef_idx')],
            },
        ),
        migrations.CreateModel(
            name='FavoriteVisualization',
            fields=[
                ('favorite_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('visualization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='www.visualization')),
            ],
            options={
                'verbose_name': 'Favorite Visualization',
                'verbose_name_plural': 'Favorite Visualizations',
                'db_table': 'favorite_visualizations',
                'unique_together': {('user', 'visualization')},
            },
        ),
    ]
